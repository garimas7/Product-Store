package tests;

import org.openqa.selenium.By;
import org.openqa.selenium.StaleElementReferenceException;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;
import pages.HomePage;
import pages.LoginPage;
import pages.ProductDetails;
import java.time.Duration;

public class ProductDetailsTest extends BaseTest {
    WebDriver driver;
    WebDriverWait wait;
    ProductDetails productDetails;
    HomePage homePage;
    LoginPage loginPage;

    @BeforeMethod
    public void setUp() throws InterruptedException {
    	System.out.println("Initializing WebDriver...");
        driver = initializeDriver();  // Initialize WebDriver
        wait = new WebDriverWait(driver, Duration.ofSeconds(10));  // Initialize WebDriverWait with a timeout of 10 seconds
        homePage = new HomePage(driver);
        productDetails = new ProductDetails(driver);
        loginPage = new LoginPage(driver);

        driver.get("https://www.demoblaze.com/");

        // Login process
        loginPage.navigateToLoginModal();
        loginPage.enterUsername("testuser25177");
        loginPage.enterPassword("1234");
        loginPage.clickLoginButton();
        Thread.sleep(3000);
    }
 
    public boolean isAlertPresent() {
        try {
            wait.until(ExpectedConditions.alertIsPresent()); // Wait for alert to appear
            return true;
        } catch (Exception e) {
            return false;
        }
    }

    @Test
    public void testVerifyProductDetails() throws InterruptedException {
        // Verify product details on the Product Details page
    	productDetails.clickOnProduct();
    	Thread.sleep(3000);
        Assert.assertTrue(!productDetails.getProductName().isEmpty(), "Product name is missing.");
        System.out.println(productDetails.getProductName());
        Assert.assertTrue(productDetails.getProductPrice().contains("$"), "Product price is not displayed or does not contain '$'.");
        System.out.println(productDetails.getProductPrice());
        Assert.assertTrue(productDetails.getProductDescription().contains("Samsung Galaxy S6"), "Product description is not displayed or does not contain 'Samsung Galaxy S6'.");
        System.out.println(productDetails.getProductDescription());
        Assert.assertNotNull(productDetails.getProductImage().getAttribute("src"), "Product image is missing.");
    }
    @Test
    public void testAddToCartButtonVisibleAndFunctional() throws InterruptedException {
        productDetails.clickOnProduct();
        Thread.sleep(3000);
        By addToCartButtonLocator = By.xpath("//a[normalize-space()='Add to cart']");
		wait.until(ExpectedConditions.visibilityOfElementLocated(addToCartButtonLocator));

        Assert.assertTrue(productDetails.getAddToCartButton().isDisplayed(), "Add to Cart button is not visible.");
        System.out.println("Add to Cart Button is visible: " + productDetails.getAddToCartButton().isDisplayed());
        
        productDetails.clickAddToCartButton();
        
        // Wait for the alert to appear
        if (isAlertPresent()) {
            driver.switchTo().alert().accept();  // Accept the alert
            System.out.println("Add to Cart successful, alert accepted.");
        } else {
            Assert.fail("Add to Cart button is not functional or no success alert is displayed.");
        }
    }
    @AfterMethod
    public void tearDown() {
        System.out.println("Quitting WebDriver...");
        driver.quit();
    }
}
