package stepsDefinitions;

import java.time.Duration;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;

import io.cucumber.java.After;
import io.cucumber.java.Before;
import io.cucumber.java.en.Given;
import io.cucumber.java.en.Then;
import io.cucumber.java.en.When;

public class HomePageSteps {

    WebDriver driver;

    @Before
    public void setup() {
        driver = new ChromeDriver();
        driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));
        driver.manage().window().maximize();
    }
    @After
    public void teardown() {
        if (driver != null) {
            driver.quit();
        }
    }
    
    @Given("I am on the homepage")
    public void i_am_on_the_homepage() {
        driver.get("https://www.demoblaze.com/");
    }

//    @When("I click on all products")
//    public void i_click_on_all_products() throws InterruptedException {
//    	List<WebElement> products = driver.findElements(By.cssSelector("#tbodyid .card a"));
//        for (WebElement product : products) {
//        	String productName = product.getText();
//        	System.out.println("Product Name: " + productName);
//            product.click();
//            WebElement productDetails = driver.findElement(By.cssSelector(".name"));
//            Assert.assertTrue(productDetails.isDisplayed(), "Product details not displayed for one product");
//            driver.navigate().back();
//        }
//    }
    @When("I click on all products")
    public void i_click_on_all_products() throws InterruptedException {
        boolean hasNextPage = true;
        int currentPage = 1;  // Track current page number
        Set<String> processedProducts = new HashSet<>();  // Track processed products
        
        while (hasNextPage && currentPage <= 2) {  // Limit to 2 pages
            System.out.println("Processing Page: " + currentPage);
            
            // Wait for products to be visible
            WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(10));
            wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.cssSelector("#tbodyid .card a")));
            
            // Get all products on current page
            List<WebElement> products = driver.findElements(By.cssSelector("#tbodyid .card a"));
            
            if (products.isEmpty()) {
                System.out.println("No products found on page " + currentPage);
                break;
            }
            
            for (WebElement product : products) {
                try {
                    String productName = product.getText();
                    
                    // Skip if product already processed
                    if (processedProducts.contains(productName)) {
                        continue;
                    }
                    processedProducts.add(productName);
                    
                    System.out.println("Processing Product: " + productName + " on Page: " + currentPage);
                    
                    ((JavascriptExecutor) driver).executeScript("arguments[0].scrollIntoView(true);", product);
                    Thread.sleep(1000);  // Increased wait time
                    
                    product.click();
                    
                    // Updated wait and selector for product details
                    try {
                        wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(".product-content h2.name")));
                        WebElement productDetails = driver.findElement(By.cssSelector(".product-content h2.name"));
                        Assert.assertTrue(productDetails.isDisplayed(), "Product details not displayed for: " + productName);
                    } catch (Exception e) {
                        System.out.println("Could not find product details for: " + productName);
                    }
                    
                    driver.navigate().back();
                    Thread.sleep(1000);  // Wait after navigation
                    
                    // Wait for products to be visible again
                    wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.cssSelector("#tbodyid .card a")));
                    
                } catch (Exception e) {
                    System.out.println("Error processing product: " + e.getMessage());
                }
            }
            
            // Check for next page only if we're on page 1
            if (currentPage == 1) {
                try {
                    WebElement nextButton = wait.until(ExpectedConditions.elementToBeClickable(By.id("next2")));
                    if (nextButton.isEnabled()) {
                        JavascriptExecutor js = (JavascriptExecutor) driver;
                        js.executeScript("arguments[0].click();", nextButton);
                        Thread.sleep(2000);  // Increased wait time after page change
                        currentPage++;
                    } else {
                        hasNextPage = false;
                    }
                } catch (Exception e) {
                    System.out.println("No more pages available or error navigating: " + e.getMessage());
                    hasNextPage = false;
                }
            } else {
                // Exit loop after processing second page
                hasNextPage = false;
            }
        }
        System.out.println("Total products processed: " + processedProducts.size());
    }
}