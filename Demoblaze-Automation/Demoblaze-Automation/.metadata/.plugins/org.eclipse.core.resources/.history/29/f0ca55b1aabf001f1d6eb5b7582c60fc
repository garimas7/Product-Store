package pages;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import java.time.Duration;

public class ErrorHandling {
    private WebDriver driver;
    private WebDriverWait wait;

    // Locators
    private By loginLink = By.id("login2");
    private By usernameField = By.id("loginusername");
    private By passwordField = By.id("loginpassword");
    private By loginButton = By.xpath("//button[contains(text(),'Log in')]");
    private By contactLink = By.xpath("//a[contains(text(),'Contact')]");
    private By contactEmail = By.id("recipient-email");
    private By contactName = By.id("recipient-name");
    private By contactMessage = By.id("message-text");
    private By sendMessageButton = By.xpath("//button[contains(text(),'Send message')]");
    private By cartLink = By.id("cartur");
    private By placeOrderButton = By.xpath("//button[contains(text(),'Place Order')]");
    private By nameField = By.id("name");
    private By cardField = By.id("card");
    private By purchaseButton = By.xpath("//button[contains(text(),'Purchase')]");

    public ErrorHandling(WebDriver driver) {
        this.driver = driver;
        this.wait = new WebDriverWait(driver, Duration.ofSeconds(10));
    }

    public boolean checkNonExistentPage() {
        driver.navigate().to("https://www.demoblaze.com/nonexistent-page");
        return driver.getPageSource().contains("404") || driver.getPageSource().contains("Page Not Found");
    }

    public void loginWithEmptyFields() {
        driver.findElement(loginLink).click();
        wait.until(ExpectedConditions.visibilityOfElementLocated(loginButton));
        driver.findElement(loginButton).click();
    }

    public String getAlertText() {
        return wait.until(ExpectedConditions.alertIsPresent()).getText();
    }

    public void submitInvalidContactForm() {
        driver.findElement(contactLink).click();
        wait.until(ExpectedConditions.visibilityOfElementLocated(contactEmail));
        driver.findElement(contactEmail).sendKeys("invalid-email");
        driver.findElement(contactName).sendKeys("Test Name");
        driver.findElement(contactMessage).sendKeys("Test Message");
        driver.findElement(sendMessageButton).click();
    }

    public void proceedToCheckoutWithoutDetails() {
        driver.findElement(cartLink).click();
        wait.until(ExpectedConditions.visibilityOfElementLocated(placeOrderButton));
        driver.findElement(placeOrderButton).click();
        wait.until(ExpectedConditions.visibilityOfElementLocated(purchaseButton));
        driver.findElement(purchaseButton).click();
    }

    public void fillFormWithMaxInput() {
        String maxInput = "a".repeat(256);
        driver.findElement(contactLink).click();
        wait.until(ExpectedConditions.visibilityOfElementLocated(contactName));
        driver.findElement(contactName).sendKeys(maxInput);
    }

    public void fillFormWithMinInput() {
        driver.findElement(contactLink).click();
        wait.until(ExpectedConditions.visibilityOfElementLocated(contactName));
        driver.findElement(contactName).sendKeys("");
    }

    public boolean verifyLoggedInUserForm() {
        // First login with valid credentials
        driver.findElement(loginLink).click();
        wait.until(ExpectedConditions.visibilityOfElementLocated(usernameField));
        driver.findElement(usernameField).sendKeys("testuser");
        driver.findElement(passwordField).sendKeys("testpass");
        driver.findElement(loginButton).click();

        // Then verify contact form
        driver.findElement(contactLink).click();
        wait.until(ExpectedConditions.visibilityOfElementLocated(contactName));
        WebElement nameField = driver.findElement(contactName);
        WebElement emailField = driver.findElement(contactEmail);
        
        return !nameField.getAttribute("value").isEmpty() && 
               !emailField.getAttribute("value").isEmpty();
    }
}
